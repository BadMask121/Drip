


# Queries for all schema
type Query{
    getVendors: [Vendor!]!
    getProducts: [Product!]!
    getOrders: [Order!]!
}


type AuthPaylod{
    token: String
    vendor: Vendor
}

# Vendors Schema
type Vendor{
    id: ID!
    name: String!
    username: String!
    password: String!
    orders: [Order]
}
# Product Schema
type Product{
    id: ID!
    name: String!   
    price: Float!
    brand: String!
    size: Int!
    size_type: String!
    category: String!
}
# Order Schema
type Order{
    id: ID!
    vendor: Vendor
    product: Product
    date: String!
    status: String!
    quantity: Int!
}

# Vendors input schema for mutations
input inputVendor{
    id: ID!
    name: String!
    username: String!
    password: String!
    orders: [inputOrder]
}
# Product input schema for mutations
input inputProduct{
    id: ID!
    name: String!   
    price: Float!
    brand: String!
    size: Int!
    size_type: String!
    category: String!
}
# Order input schema for mutations
input inputOrder{
    id: ID!
    vendor: inputVendor
    product: inputProduct
    date: String!
    status: String!
    quantity: Int!
}


type Mutation{
    createVendor(
        name: String!,
        username: String!,
        password: String!,
        orders: [inputOrder]
    ): AuthPaylod!

    createProduct(
        name: String!,   
        price: Float!,
        brand: String!,
        size: Int!,
        size_type: String!,
        category: String!
    ): Product!

    createOrder(
        vendor: [inputVendor!]!,
        product: [inputProduct!]!,
        date: String!,
        status: String!,
        quantity: Int!
    ):Order!

    vendorExist(
        id: ID!,
        username: String!
    ):AuthPaylod!
}
