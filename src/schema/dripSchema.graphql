


# Queries for all schema
type Query{
    getVendors (id : ID! ): [Vendor!]!
    getProducts: [Product!]!
    getOrders(vendorId: ID!): [Order!]!
}

#payload schema
type AuthPaylod{
    token: String
    vendorId: String!
}




# Vendors Schema
type Vendor{
    id: ID!
    name: String!
    username: String!
    password: String!
}
# Product Schema
type Product{
    id: ID!
    name: String!   
    price: Float!
    brand: String!
    size: Int!
    size_type: String!
    category: String!
}
# Order Schema
type Order{
    id: ID!
    vendor: Vendor!
    product: Product!
    date: String!
    status: String!
    quantity: Int!
}






# Vendors input schema for mutations
input inputVendor{
    id: ID!
    name: String!
    username: String!
    password: String!
}
# Product input schema for mutations
input inputProduct{
    id: ID!
    name: String!   
    price: Float!
    brand: String!
    size: Int!
    size_type: String!
    category: String!
}
# Order input schema for mutations
input inputOrder{
    id: ID!
    vendor: inputVendor!
    product: inputProduct!
    date: String!
    status: String!
    quantity: Int!
}






type Mutation{
    createVendor(
        name: String!,
        username: String,
        password: String!,
    ): AuthPaylod!

    createProduct(
        name: String!,   
        price: Float!,
        brand: String!,
        size: Int!,
        size_type: String!,
        category: String!
    ): Product!

    createOrder(
        vendor: inputVendor!,
        product: inputProduct!,
        date: String!,
        status: String!,
        quantity: Int!
    ):Order!

    createAuthPaylod(
        token: String
        vendor: inputVendor
    ):AuthPaylod!

    vendorExist(
        id: ID!,
        username: String!
    ):AuthPaylod!
}
